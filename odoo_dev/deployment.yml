apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo18
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odoo18
  template:
    metadata:
      labels:
        app: odoo18
    spec:
      # Contexto de seguridad para que los volúmenes pertenezcan al grupo del usuario odoo (101)
      securityContext:
        fsGroup: 101

      # Contenedor de inicialización para arreglar permisos ANTES de que los contenedores principales arranquen
      initContainers:
      - name: fix-permissions
        image: busybox:latest
        command: ["sh", "-c", "chown -R 101:101 /var/lib/odoo /mnt/extra-addons && chmod -R 775 /var/lib/odoo /mnt/extra-addons"]
        volumeMounts:
          - name: odoo-data18
            mountPath: /var/lib/odoo
          - name: odoo-extra-addons18
            mountPath: /mnt/extra-addons

      # --- Definición de los dos contenedores que correrán en el mismo Pod ---
      containers:
        # ===============================================
        # Contenedor 1: Odoo (Servicio Principal)
        # ===============================================
        - name: odoo18
          image: proyectosspr/odoo_18_git:4.2
          imagePullPolicy: Always
          
          # Comando limpio para iniciar solo Odoo, usando el archivo de configuración
          command: ["/usr/bin/odoo"]
          args:
            - "--config=/etc/odoo/odoo.conf"
          
          ports:
            - containerPort: 8069
              name: http
            - containerPort: 8072
              name: longpolling
          
          env:
            - name: HTTP_X_FORWARDED_PROTO
              value: "https"
            - name: HTTP_X_FORWARDED_HOST
              value: "automateai.com.mx"
            - name: HTTP_X_FORWARDED_PORT
              value: "443"
            - name: HOST
              value: "automateai.com.mx"
          
          volumeMounts:
            - name: odoo-data18
              mountPath: /var/lib/odoo
            - name: config-volume18
              mountPath: /etc/odoo
              readOnly: true
            - name: odoo-extra-addons18
              mountPath: /mnt/extra-addons
          
          resources:
            requests:
              memory: "4Gi"
              cpu: "3"
            limits:
              memory: "6Gi"
              cpu: "4"

        # ===============================================
        # Contenedor 2: Jupyter Lab (Herramienta de desarrollo)
        # ===============================================
        - name: jupyter
          # Usa la misma imagen, ya que contiene todo lo necesario
          image: proyectosspr/odoo_18_git:4.2
          imagePullPolicy: Always
          
          # Comando limpio para iniciar solo Jupyter Lab
          command: ["jupyter", "lab"]
          args:
            - "--ip=0.0.0.0"
            - "--port=8888"
            - "--ServerApp.token=admin"
            - "--notebook-dir=/mnt/extra-addons" # Inicia en la carpeta de addons para fácil acceso
            - "--no-browser"
            - "--allow-root" # A menudo necesario para que Jupyter corra en contenedores
          
          ports:
            - containerPort: 8888
              name: jupyter
          
          # Monta los mismos volúmenes para que Jupyter pueda "ver" el entorno de Odoo
          volumeMounts:
            - name: odoo-data18
              mountPath: /var/lib/odoo
            - name: config-volume18
              mountPath: /etc/odoo
              readOnly: true
            - name: odoo-extra-addons18
              mountPath: /mnt/extra-addons

      # --- Definición de los volúmenes compartidos por ambos contenedores ---
      volumes:
        - name: odoo-data18
          persistentVolumeClaim:
            claimName: odoo-data18
        - name: config-volume18
          configMap:
            name: odoo-config18
            items:
              - key: odoo.conf
                path: odoo.conf
        - name: odoo-extra-addons18
          persistentVolumeClaim:
            claimName: odoo-extra-addons18